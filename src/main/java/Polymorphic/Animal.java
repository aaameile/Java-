package Polymorphic;
/*
多态（polymorphic）
    继承关系比较多的时候 super只能访问 子类的最终父类 但是想访问直接父类 就可以用多态

理解
    一个事物的多种形态

何为多态
    父类引用指向子类对象

场景
    当调用子类同名同参数方法时 实际上执行的是子类重写父类的方法-----虚拟方法的调用

使用
    1 有了对象的多态性后 我们在编译期只能调用父类中声明的方法
      但在运行期我们实际执行的是子类重写父类的方法
    2 编译看左边 执行看右边
    3 有了对象的多态性后 内存实际上是加载了子类特有的属性和方法
      但是由于变量声明为父类类型导致编译时只能调用父类中声明的属性和方法
      可以使用强制类型转换符((tomCat) a1).speak();调用子类特有方法

多态使用前提
    类的继承关系 方法的重写
    对象的多态性只适用于方法 不适用于属性

instanceof关键字的使用
    判断a对象是否是A类的实例 如果是返回true 否则返回false
    为了避免向下转型出现ClassCastException的异常
    我们在向下转型之前先进行instanceof判断 一旦返回true就向下转型否则不转型
    对于同一个
    对象只能转一次
 */
public class Animal {
    String name;
    int age;
    int id = 1;
    public void eat(){
        System.out.println(" 动物吃饲料 ");
    }
}
